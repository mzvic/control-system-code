# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.8
#
# <auto-generated>
#
# Generated from file `rigol.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Rigol
_M_Rigol = Ice.openModule('Rigol')
__name__ = 'Rigol'

_M_Rigol._t_Interaction = IcePy.defineValue('::Rigol::Interaction', Ice.Value, -1, (), False, True, None, ())

if 'InteractionPrx' not in _M_Rigol.__dict__:
    _M_Rigol.InteractionPrx = Ice.createTempClass()
    class InteractionPrx(Ice.ObjectPrx):

        def getCommand(self, command, context=None):
            return _M_Rigol.Interaction._op_getCommand.invoke(self, ((command, ), context))

        def getCommandAsync(self, command, context=None):
            return _M_Rigol.Interaction._op_getCommand.invokeAsync(self, ((command, ), context))

        def begin_getCommand(self, command, _response=None, _ex=None, _sent=None, context=None):
            return _M_Rigol.Interaction._op_getCommand.begin(self, ((command, ), _response, _ex, _sent, context))

        def end_getCommand(self, _r):
            return _M_Rigol.Interaction._op_getCommand.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Rigol.InteractionPrx.ice_checkedCast(proxy, '::Rigol::Interaction', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Rigol.InteractionPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Rigol::Interaction'
    _M_Rigol._t_InteractionPrx = IcePy.defineProxy('::Rigol::Interaction', InteractionPrx)

    _M_Rigol.InteractionPrx = InteractionPrx
    del InteractionPrx

    _M_Rigol.Interaction = Ice.createTempClass()
    class Interaction(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::Rigol::Interaction')

        def ice_id(self, current=None):
            return '::Rigol::Interaction'

        @staticmethod
        def ice_staticId():
            return '::Rigol::Interaction'

        def getCommand(self, command, current=None):
            raise NotImplementedError("servant method 'getCommand' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Rigol._t_InteractionDisp)

        __repr__ = __str__

    _M_Rigol._t_InteractionDisp = IcePy.defineClass('::Rigol::Interaction', Interaction, (), None, ())
    Interaction._ice_type = _M_Rigol._t_InteractionDisp

    Interaction._op_getCommand = IcePy.Operation('getCommand', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), None, ())

    _M_Rigol.Interaction = Interaction
    del Interaction

# End of module Rigol
